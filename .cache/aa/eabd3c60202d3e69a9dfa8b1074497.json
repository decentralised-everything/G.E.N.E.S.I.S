{"id":"../../node_modules/lodash/escapeRegExp.js","dependencies":[{"name":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/package.json","includedInParent":true,"mtime":1616006581122},{"name":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/.babelrc","includedInParent":true,"mtime":1615911566978},{"name":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/node_modules/lodash/package.json","includedInParent":true,"mtime":1615833783033},{"name":"./toString","loc":{"line":1,"column":23},"parent":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/node_modules/lodash/escapeRegExp.js","resolved":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/node_modules/lodash/toString.js"}],"generated":{"js":"var toString = require('./toString');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nmodule.exports = escapeRegExp;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/lodash/escapeRegExp.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}}],"sources":{"../../node_modules/lodash/escapeRegExp.js":"var toString = require('./toString');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nmodule.exports = escapeRegExp;\n"},"lineCount":33}},"error":null,"hash":"2e33e5b4d32dd12bcb9f7a0d24445e55","cacheData":{"env":{}}}
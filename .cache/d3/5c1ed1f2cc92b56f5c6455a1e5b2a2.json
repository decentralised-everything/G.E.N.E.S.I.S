{"id":"../../node_modules/babel-generator/lib/node/parentheses.js","dependencies":[{"name":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/package.json","includedInParent":true,"mtime":1616006581122},{"name":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/.babelrc","includedInParent":true,"mtime":1615911566978},{"name":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/node_modules/babel-generator/package.json","includedInParent":true,"mtime":1615895468550},{"name":"babel-types","loc":{"line":20,"column":26},"parent":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/node_modules/babel-generator/lib/node/parentheses.js","resolved":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/node_modules/babel-types/lib/index.js"}],"generated":{"js":"\"use strict\";\n\nexports.__esModule = true;\nexports.AwaitExpression = exports.FunctionTypeAnnotation = undefined;\nexports.NullableTypeAnnotation = NullableTypeAnnotation;\nexports.UpdateExpression = UpdateExpression;\nexports.ObjectExpression = ObjectExpression;\nexports.DoExpression = DoExpression;\nexports.Binary = Binary;\nexports.BinaryExpression = BinaryExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.YieldExpression = YieldExpression;\nexports.ClassExpression = ClassExpression;\nexports.UnaryLike = UnaryLike;\nexports.FunctionExpression = FunctionExpression;\nexports.ArrowFunctionExpression = ArrowFunctionExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.AssignmentExpression = AssignmentExpression;\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar PRECEDENCE = {\n  \"||\": 0,\n  \"&&\": 1,\n  \"|\": 2,\n  \"^\": 3,\n  \"&\": 4,\n  \"==\": 5,\n  \"===\": 5,\n  \"!=\": 5,\n  \"!==\": 5,\n  \"<\": 6,\n  \">\": 6,\n  \"<=\": 6,\n  \">=\": 6,\n  in: 6,\n  instanceof: 6,\n  \">>\": 7,\n  \"<<\": 7,\n  \">>>\": 7,\n  \"+\": 8,\n  \"-\": 8,\n  \"*\": 9,\n  \"/\": 9,\n  \"%\": 9,\n  \"**\": 10\n};\n\nfunction NullableTypeAnnotation(node, parent) {\n  return t.isArrayTypeAnnotation(parent);\n}\n\nexports.FunctionTypeAnnotation = NullableTypeAnnotation;\nfunction UpdateExpression(node, parent) {\n  return t.isMemberExpression(parent) && parent.object === node;\n}\n\nfunction ObjectExpression(node, parent, printStack) {\n  return isFirstInStatement(printStack, { considerArrow: true });\n}\n\nfunction DoExpression(node, parent, printStack) {\n  return isFirstInStatement(printStack);\n}\n\nfunction Binary(node, parent) {\n  if ((t.isCallExpression(parent) || t.isNewExpression(parent)) && parent.callee === node || t.isUnaryLike(parent) || t.isMemberExpression(parent) && parent.object === node || t.isAwaitExpression(parent)) {\n    return true;\n  }\n\n  if (t.isBinary(parent)) {\n    var parentOp = parent.operator;\n    var parentPos = PRECEDENCE[parentOp];\n\n    var nodeOp = node.operator;\n    var nodePos = PRECEDENCE[nodeOp];\n\n    if (parentPos === nodePos && parent.right === node && !t.isLogicalExpression(parent) || parentPos > nodePos) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction BinaryExpression(node, parent) {\n  return node.operator === \"in\" && (t.isVariableDeclarator(parent) || t.isFor(parent));\n}\n\nfunction SequenceExpression(node, parent) {\n\n  if (t.isForStatement(parent) || t.isThrowStatement(parent) || t.isReturnStatement(parent) || t.isIfStatement(parent) && parent.test === node || t.isWhileStatement(parent) && parent.test === node || t.isForInStatement(parent) && parent.right === node || t.isSwitchStatement(parent) && parent.discriminant === node || t.isExpressionStatement(parent) && parent.expression === node) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction YieldExpression(node, parent) {\n  return t.isBinary(parent) || t.isUnaryLike(parent) || t.isCallExpression(parent) || t.isMemberExpression(parent) || t.isNewExpression(parent) || t.isConditionalExpression(parent) && node === parent.test;\n}\n\nexports.AwaitExpression = YieldExpression;\nfunction ClassExpression(node, parent, printStack) {\n  return isFirstInStatement(printStack, { considerDefaultExports: true });\n}\n\nfunction UnaryLike(node, parent) {\n  return t.isMemberExpression(parent, { object: node }) || t.isCallExpression(parent, { callee: node }) || t.isNewExpression(parent, { callee: node });\n}\n\nfunction FunctionExpression(node, parent, printStack) {\n  return isFirstInStatement(printStack, { considerDefaultExports: true });\n}\n\nfunction ArrowFunctionExpression(node, parent) {\n  if (t.isExportDeclaration(parent) || t.isBinaryExpression(parent) || t.isLogicalExpression(parent) || t.isUnaryExpression(parent) || t.isTaggedTemplateExpression(parent)) {\n    return true;\n  }\n\n  return UnaryLike(node, parent);\n}\n\nfunction ConditionalExpression(node, parent) {\n  if (t.isUnaryLike(parent) || t.isBinary(parent) || t.isConditionalExpression(parent, { test: node }) || t.isAwaitExpression(parent)) {\n    return true;\n  }\n\n  return UnaryLike(node, parent);\n}\n\nfunction AssignmentExpression(node) {\n  if (t.isObjectPattern(node.left)) {\n    return true;\n  } else {\n    return ConditionalExpression.apply(undefined, arguments);\n  }\n}\n\nfunction isFirstInStatement(printStack) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$considerArrow = _ref.considerArrow,\n      considerArrow = _ref$considerArrow === undefined ? false : _ref$considerArrow,\n      _ref$considerDefaultE = _ref.considerDefaultExports,\n      considerDefaultExports = _ref$considerDefaultE === undefined ? false : _ref$considerDefaultE;\n\n  var i = printStack.length - 1;\n  var node = printStack[i];\n  i--;\n  var parent = printStack[i];\n  while (i > 0) {\n    if (t.isExpressionStatement(parent, { expression: node }) || t.isTaggedTemplateExpression(parent) || considerDefaultExports && t.isExportDefaultDeclaration(parent, { declaration: node }) || considerArrow && t.isArrowFunctionExpression(parent, { body: node })) {\n      return true;\n    }\n\n    if (t.isCallExpression(parent, { callee: node }) || t.isSequenceExpression(parent) && parent.expressions[0] === node || t.isMemberExpression(parent, { object: node }) || t.isConditional(parent, { test: node }) || t.isBinary(parent, { left: node }) || t.isAssignmentExpression(parent, { left: node })) {\n      node = parent;\n      i--;\n      parent = printStack[i];\n    } else {\n      return false;\n    }\n  }\n\n  return false;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/babel-generator/lib/node/parentheses.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}}],"sources":{"../../node_modules/babel-generator/lib/node/parentheses.js":"\"use strict\";\n\nexports.__esModule = true;\nexports.AwaitExpression = exports.FunctionTypeAnnotation = undefined;\nexports.NullableTypeAnnotation = NullableTypeAnnotation;\nexports.UpdateExpression = UpdateExpression;\nexports.ObjectExpression = ObjectExpression;\nexports.DoExpression = DoExpression;\nexports.Binary = Binary;\nexports.BinaryExpression = BinaryExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.YieldExpression = YieldExpression;\nexports.ClassExpression = ClassExpression;\nexports.UnaryLike = UnaryLike;\nexports.FunctionExpression = FunctionExpression;\nexports.ArrowFunctionExpression = ArrowFunctionExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.AssignmentExpression = AssignmentExpression;\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar PRECEDENCE = {\n  \"||\": 0,\n  \"&&\": 1,\n  \"|\": 2,\n  \"^\": 3,\n  \"&\": 4,\n  \"==\": 5,\n  \"===\": 5,\n  \"!=\": 5,\n  \"!==\": 5,\n  \"<\": 6,\n  \">\": 6,\n  \"<=\": 6,\n  \">=\": 6,\n  in: 6,\n  instanceof: 6,\n  \">>\": 7,\n  \"<<\": 7,\n  \">>>\": 7,\n  \"+\": 8,\n  \"-\": 8,\n  \"*\": 9,\n  \"/\": 9,\n  \"%\": 9,\n  \"**\": 10\n};\n\nfunction NullableTypeAnnotation(node, parent) {\n  return t.isArrayTypeAnnotation(parent);\n}\n\nexports.FunctionTypeAnnotation = NullableTypeAnnotation;\nfunction UpdateExpression(node, parent) {\n  return t.isMemberExpression(parent) && parent.object === node;\n}\n\nfunction ObjectExpression(node, parent, printStack) {\n  return isFirstInStatement(printStack, { considerArrow: true });\n}\n\nfunction DoExpression(node, parent, printStack) {\n  return isFirstInStatement(printStack);\n}\n\nfunction Binary(node, parent) {\n  if ((t.isCallExpression(parent) || t.isNewExpression(parent)) && parent.callee === node || t.isUnaryLike(parent) || t.isMemberExpression(parent) && parent.object === node || t.isAwaitExpression(parent)) {\n    return true;\n  }\n\n  if (t.isBinary(parent)) {\n    var parentOp = parent.operator;\n    var parentPos = PRECEDENCE[parentOp];\n\n    var nodeOp = node.operator;\n    var nodePos = PRECEDENCE[nodeOp];\n\n    if (parentPos === nodePos && parent.right === node && !t.isLogicalExpression(parent) || parentPos > nodePos) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction BinaryExpression(node, parent) {\n  return node.operator === \"in\" && (t.isVariableDeclarator(parent) || t.isFor(parent));\n}\n\nfunction SequenceExpression(node, parent) {\n\n  if (t.isForStatement(parent) || t.isThrowStatement(parent) || t.isReturnStatement(parent) || t.isIfStatement(parent) && parent.test === node || t.isWhileStatement(parent) && parent.test === node || t.isForInStatement(parent) && parent.right === node || t.isSwitchStatement(parent) && parent.discriminant === node || t.isExpressionStatement(parent) && parent.expression === node) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction YieldExpression(node, parent) {\n  return t.isBinary(parent) || t.isUnaryLike(parent) || t.isCallExpression(parent) || t.isMemberExpression(parent) || t.isNewExpression(parent) || t.isConditionalExpression(parent) && node === parent.test;\n}\n\nexports.AwaitExpression = YieldExpression;\nfunction ClassExpression(node, parent, printStack) {\n  return isFirstInStatement(printStack, { considerDefaultExports: true });\n}\n\nfunction UnaryLike(node, parent) {\n  return t.isMemberExpression(parent, { object: node }) || t.isCallExpression(parent, { callee: node }) || t.isNewExpression(parent, { callee: node });\n}\n\nfunction FunctionExpression(node, parent, printStack) {\n  return isFirstInStatement(printStack, { considerDefaultExports: true });\n}\n\nfunction ArrowFunctionExpression(node, parent) {\n  if (t.isExportDeclaration(parent) || t.isBinaryExpression(parent) || t.isLogicalExpression(parent) || t.isUnaryExpression(parent) || t.isTaggedTemplateExpression(parent)) {\n    return true;\n  }\n\n  return UnaryLike(node, parent);\n}\n\nfunction ConditionalExpression(node, parent) {\n  if (t.isUnaryLike(parent) || t.isBinary(parent) || t.isConditionalExpression(parent, { test: node }) || t.isAwaitExpression(parent)) {\n    return true;\n  }\n\n  return UnaryLike(node, parent);\n}\n\nfunction AssignmentExpression(node) {\n  if (t.isObjectPattern(node.left)) {\n    return true;\n  } else {\n    return ConditionalExpression.apply(undefined, arguments);\n  }\n}\n\nfunction isFirstInStatement(printStack) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$considerArrow = _ref.considerArrow,\n      considerArrow = _ref$considerArrow === undefined ? false : _ref$considerArrow,\n      _ref$considerDefaultE = _ref.considerDefaultExports,\n      considerDefaultExports = _ref$considerDefaultE === undefined ? false : _ref$considerDefaultE;\n\n  var i = printStack.length - 1;\n  var node = printStack[i];\n  i--;\n  var parent = printStack[i];\n  while (i > 0) {\n    if (t.isExpressionStatement(parent, { expression: node }) || t.isTaggedTemplateExpression(parent) || considerDefaultExports && t.isExportDefaultDeclaration(parent, { declaration: node }) || considerArrow && t.isArrowFunctionExpression(parent, { body: node })) {\n      return true;\n    }\n\n    if (t.isCallExpression(parent, { callee: node }) || t.isSequenceExpression(parent) && parent.expressions[0] === node || t.isMemberExpression(parent, { object: node }) || t.isConditional(parent, { test: node }) || t.isBinary(parent, { left: node }) || t.isAssignmentExpression(parent, { left: node })) {\n      node = parent;\n      i--;\n      parent = printStack[i];\n    } else {\n      return false;\n    }\n  }\n\n  return false;\n}"},"lineCount":170}},"error":null,"hash":"adf80a17d2b69edf3a84fb6b82ba606c","cacheData":{"env":{}}}
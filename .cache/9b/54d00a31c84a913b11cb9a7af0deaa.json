{"id":"../../node_modules/babel-types/lib/converters.js","dependencies":[{"name":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/package.json","includedInParent":true,"mtime":1616006581122},{"name":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/.babelrc","includedInParent":true,"mtime":1615911566978},{"name":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/node_modules/babel-types/package.json","includedInParent":true,"mtime":1615833783032},{"name":"babel-runtime/core-js/number/max-safe-integer","loc":{"line":5,"column":30},"parent":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/node_modules/babel-types/lib/converters.js","resolved":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/node_modules/babel-runtime/core-js/number/max-safe-integer.js"},{"name":"babel-runtime/core-js/json/stringify","loc":{"line":9,"column":25},"parent":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/node_modules/babel-types/lib/converters.js","resolved":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/node_modules/babel-runtime/core-js/json/stringify.js"},{"name":"babel-runtime/core-js/get-iterator","loc":{"line":13,"column":28},"parent":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/node_modules/babel-types/lib/converters.js","resolved":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/node_modules/babel-runtime/core-js/get-iterator.js"},{"name":"lodash/isPlainObject","loc":{"line":27,"column":29},"parent":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/node_modules/babel-types/lib/converters.js","resolved":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/node_modules/lodash/isPlainObject.js"},{"name":"lodash/isRegExp","loc":{"line":31,"column":24},"parent":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/node_modules/babel-types/lib/converters.js","resolved":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/node_modules/lodash/isRegExp.js"},{"name":"./index","loc":{"line":35,"column":21},"parent":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/node_modules/babel-types/lib/converters.js","resolved":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/node_modules/babel-types/lib/index.js"}],"generated":{"js":"\"use strict\";\n\nexports.__esModule = true;\n\nvar _maxSafeInteger = require(\"babel-runtime/core-js/number/max-safe-integer\");\n\nvar _maxSafeInteger2 = _interopRequireDefault(_maxSafeInteger);\n\nvar _stringify = require(\"babel-runtime/core-js/json/stringify\");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.toComputedKey = toComputedKey;\nexports.toSequenceExpression = toSequenceExpression;\nexports.toKeyAlias = toKeyAlias;\nexports.toIdentifier = toIdentifier;\nexports.toBindingIdentifierName = toBindingIdentifierName;\nexports.toStatement = toStatement;\nexports.toExpression = toExpression;\nexports.toBlock = toBlock;\nexports.valueToNode = valueToNode;\n\nvar _isPlainObject = require(\"lodash/isPlainObject\");\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _isRegExp = require(\"lodash/isRegExp\");\n\nvar _isRegExp2 = _interopRequireDefault(_isRegExp);\n\nvar _index = require(\"./index\");\n\nvar t = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction toComputedKey(node) {\n  var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : node.key || node.property;\n\n  if (!node.computed) {\n    if (t.isIdentifier(key)) key = t.stringLiteral(key.name);\n  }\n  return key;\n}\n\nfunction gatherSequenceExpressions(nodes, scope, declars) {\n  var exprs = [];\n  var ensureLastUndefined = true;\n\n  for (var _iterator = nodes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var node = _ref;\n\n    ensureLastUndefined = false;\n\n    if (t.isExpression(node)) {\n      exprs.push(node);\n    } else if (t.isExpressionStatement(node)) {\n      exprs.push(node.expression);\n    } else if (t.isVariableDeclaration(node)) {\n      if (node.kind !== \"var\") return;\n\n      for (var _iterator2 = node.declarations, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var declar = _ref2;\n\n        var bindings = t.getBindingIdentifiers(declar);\n        for (var key in bindings) {\n          declars.push({\n            kind: node.kind,\n            id: bindings[key]\n          });\n        }\n\n        if (declar.init) {\n          exprs.push(t.assignmentExpression(\"=\", declar.id, declar.init));\n        }\n      }\n\n      ensureLastUndefined = true;\n    } else if (t.isIfStatement(node)) {\n      var consequent = node.consequent ? gatherSequenceExpressions([node.consequent], scope, declars) : scope.buildUndefinedNode();\n      var alternate = node.alternate ? gatherSequenceExpressions([node.alternate], scope, declars) : scope.buildUndefinedNode();\n      if (!consequent || !alternate) return;\n\n      exprs.push(t.conditionalExpression(node.test, consequent, alternate));\n    } else if (t.isBlockStatement(node)) {\n      var body = gatherSequenceExpressions(node.body, scope, declars);\n      if (!body) return;\n\n      exprs.push(body);\n    } else if (t.isEmptyStatement(node)) {\n      ensureLastUndefined = true;\n    } else {\n      return;\n    }\n  }\n\n  if (ensureLastUndefined) {\n    exprs.push(scope.buildUndefinedNode());\n  }\n\n  if (exprs.length === 1) {\n    return exprs[0];\n  } else {\n    return t.sequenceExpression(exprs);\n  }\n}\n\nfunction toSequenceExpression(nodes, scope) {\n  if (!nodes || !nodes.length) return;\n\n  var declars = [];\n  var result = gatherSequenceExpressions(nodes, scope, declars);\n  if (!result) return;\n\n  for (var _iterator3 = declars, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n    var _ref3;\n\n    if (_isArray3) {\n      if (_i3 >= _iterator3.length) break;\n      _ref3 = _iterator3[_i3++];\n    } else {\n      _i3 = _iterator3.next();\n      if (_i3.done) break;\n      _ref3 = _i3.value;\n    }\n\n    var declar = _ref3;\n\n    scope.push(declar);\n  }\n\n  return result;\n}\n\nfunction toKeyAlias(node) {\n  var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : node.key;\n\n  var alias = void 0;\n\n  if (node.kind === \"method\") {\n    return toKeyAlias.increment() + \"\";\n  } else if (t.isIdentifier(key)) {\n    alias = key.name;\n  } else if (t.isStringLiteral(key)) {\n    alias = (0, _stringify2.default)(key.value);\n  } else {\n    alias = (0, _stringify2.default)(t.removePropertiesDeep(t.cloneDeep(key)));\n  }\n\n  if (node.computed) {\n    alias = \"[\" + alias + \"]\";\n  }\n\n  if (node.static) {\n    alias = \"static:\" + alias;\n  }\n\n  return alias;\n}\n\ntoKeyAlias.uid = 0;\n\ntoKeyAlias.increment = function () {\n  if (toKeyAlias.uid >= _maxSafeInteger2.default) {\n    return toKeyAlias.uid = 0;\n  } else {\n    return toKeyAlias.uid++;\n  }\n};\n\nfunction toIdentifier(name) {\n  name = name + \"\";\n\n  name = name.replace(/[^a-zA-Z0-9$_]/g, \"-\");\n\n  name = name.replace(/^[-0-9]+/, \"\");\n\n  name = name.replace(/[-\\s]+(.)?/g, function (match, c) {\n    return c ? c.toUpperCase() : \"\";\n  });\n\n  if (!t.isValidIdentifier(name)) {\n    name = \"_\" + name;\n  }\n\n  return name || \"_\";\n}\n\nfunction toBindingIdentifierName(name) {\n  name = toIdentifier(name);\n  if (name === \"eval\" || name === \"arguments\") name = \"_\" + name;\n  return name;\n}\n\nfunction toStatement(node, ignore) {\n  if (t.isStatement(node)) {\n    return node;\n  }\n\n  var mustHaveId = false;\n  var newType = void 0;\n\n  if (t.isClass(node)) {\n    mustHaveId = true;\n    newType = \"ClassDeclaration\";\n  } else if (t.isFunction(node)) {\n    mustHaveId = true;\n    newType = \"FunctionDeclaration\";\n  } else if (t.isAssignmentExpression(node)) {\n    return t.expressionStatement(node);\n  }\n\n  if (mustHaveId && !node.id) {\n    newType = false;\n  }\n\n  if (!newType) {\n    if (ignore) {\n      return false;\n    } else {\n      throw new Error(\"cannot turn \" + node.type + \" to a statement\");\n    }\n  }\n\n  node.type = newType;\n\n  return node;\n}\n\nfunction toExpression(node) {\n  if (t.isExpressionStatement(node)) {\n    node = node.expression;\n  }\n\n  if (t.isExpression(node)) {\n    return node;\n  }\n\n  if (t.isClass(node)) {\n    node.type = \"ClassExpression\";\n  } else if (t.isFunction(node)) {\n    node.type = \"FunctionExpression\";\n  }\n\n  if (!t.isExpression(node)) {\n    throw new Error(\"cannot turn \" + node.type + \" to an expression\");\n  }\n\n  return node;\n}\n\nfunction toBlock(node, parent) {\n  if (t.isBlockStatement(node)) {\n    return node;\n  }\n\n  if (t.isEmptyStatement(node)) {\n    node = [];\n  }\n\n  if (!Array.isArray(node)) {\n    if (!t.isStatement(node)) {\n      if (t.isFunction(parent)) {\n        node = t.returnStatement(node);\n      } else {\n        node = t.expressionStatement(node);\n      }\n    }\n\n    node = [node];\n  }\n\n  return t.blockStatement(node);\n}\n\nfunction valueToNode(value) {\n  if (value === undefined) {\n    return t.identifier(\"undefined\");\n  }\n\n  if (value === true || value === false) {\n    return t.booleanLiteral(value);\n  }\n\n  if (value === null) {\n    return t.nullLiteral();\n  }\n\n  if (typeof value === \"string\") {\n    return t.stringLiteral(value);\n  }\n\n  if (typeof value === \"number\") {\n    return t.numericLiteral(value);\n  }\n\n  if ((0, _isRegExp2.default)(value)) {\n    var pattern = value.source;\n    var flags = value.toString().match(/\\/([a-z]+|)$/)[1];\n    return t.regExpLiteral(pattern, flags);\n  }\n\n  if (Array.isArray(value)) {\n    return t.arrayExpression(value.map(t.valueToNode));\n  }\n\n  if ((0, _isPlainObject2.default)(value)) {\n    var props = [];\n    for (var key in value) {\n      var nodeKey = void 0;\n      if (t.isValidIdentifier(key)) {\n        nodeKey = t.identifier(key);\n      } else {\n        nodeKey = t.stringLiteral(key);\n      }\n      props.push(t.objectProperty(nodeKey, t.valueToNode(value[key])));\n    }\n    return t.objectExpression(props);\n  }\n\n  throw new Error(\"don't know how to turn this value into a node\");\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../../node_modules/babel-types/lib/converters.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}}],"sources":{"../../node_modules/babel-types/lib/converters.js":"\"use strict\";\n\nexports.__esModule = true;\n\nvar _maxSafeInteger = require(\"babel-runtime/core-js/number/max-safe-integer\");\n\nvar _maxSafeInteger2 = _interopRequireDefault(_maxSafeInteger);\n\nvar _stringify = require(\"babel-runtime/core-js/json/stringify\");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.toComputedKey = toComputedKey;\nexports.toSequenceExpression = toSequenceExpression;\nexports.toKeyAlias = toKeyAlias;\nexports.toIdentifier = toIdentifier;\nexports.toBindingIdentifierName = toBindingIdentifierName;\nexports.toStatement = toStatement;\nexports.toExpression = toExpression;\nexports.toBlock = toBlock;\nexports.valueToNode = valueToNode;\n\nvar _isPlainObject = require(\"lodash/isPlainObject\");\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _isRegExp = require(\"lodash/isRegExp\");\n\nvar _isRegExp2 = _interopRequireDefault(_isRegExp);\n\nvar _index = require(\"./index\");\n\nvar t = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction toComputedKey(node) {\n  var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : node.key || node.property;\n\n  if (!node.computed) {\n    if (t.isIdentifier(key)) key = t.stringLiteral(key.name);\n  }\n  return key;\n}\n\nfunction gatherSequenceExpressions(nodes, scope, declars) {\n  var exprs = [];\n  var ensureLastUndefined = true;\n\n  for (var _iterator = nodes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var node = _ref;\n\n    ensureLastUndefined = false;\n\n    if (t.isExpression(node)) {\n      exprs.push(node);\n    } else if (t.isExpressionStatement(node)) {\n      exprs.push(node.expression);\n    } else if (t.isVariableDeclaration(node)) {\n      if (node.kind !== \"var\") return;\n\n      for (var _iterator2 = node.declarations, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var declar = _ref2;\n\n        var bindings = t.getBindingIdentifiers(declar);\n        for (var key in bindings) {\n          declars.push({\n            kind: node.kind,\n            id: bindings[key]\n          });\n        }\n\n        if (declar.init) {\n          exprs.push(t.assignmentExpression(\"=\", declar.id, declar.init));\n        }\n      }\n\n      ensureLastUndefined = true;\n    } else if (t.isIfStatement(node)) {\n      var consequent = node.consequent ? gatherSequenceExpressions([node.consequent], scope, declars) : scope.buildUndefinedNode();\n      var alternate = node.alternate ? gatherSequenceExpressions([node.alternate], scope, declars) : scope.buildUndefinedNode();\n      if (!consequent || !alternate) return;\n\n      exprs.push(t.conditionalExpression(node.test, consequent, alternate));\n    } else if (t.isBlockStatement(node)) {\n      var body = gatherSequenceExpressions(node.body, scope, declars);\n      if (!body) return;\n\n      exprs.push(body);\n    } else if (t.isEmptyStatement(node)) {\n      ensureLastUndefined = true;\n    } else {\n      return;\n    }\n  }\n\n  if (ensureLastUndefined) {\n    exprs.push(scope.buildUndefinedNode());\n  }\n\n  if (exprs.length === 1) {\n    return exprs[0];\n  } else {\n    return t.sequenceExpression(exprs);\n  }\n}\n\nfunction toSequenceExpression(nodes, scope) {\n  if (!nodes || !nodes.length) return;\n\n  var declars = [];\n  var result = gatherSequenceExpressions(nodes, scope, declars);\n  if (!result) return;\n\n  for (var _iterator3 = declars, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n    var _ref3;\n\n    if (_isArray3) {\n      if (_i3 >= _iterator3.length) break;\n      _ref3 = _iterator3[_i3++];\n    } else {\n      _i3 = _iterator3.next();\n      if (_i3.done) break;\n      _ref3 = _i3.value;\n    }\n\n    var declar = _ref3;\n\n    scope.push(declar);\n  }\n\n  return result;\n}\n\nfunction toKeyAlias(node) {\n  var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : node.key;\n\n  var alias = void 0;\n\n  if (node.kind === \"method\") {\n    return toKeyAlias.increment() + \"\";\n  } else if (t.isIdentifier(key)) {\n    alias = key.name;\n  } else if (t.isStringLiteral(key)) {\n    alias = (0, _stringify2.default)(key.value);\n  } else {\n    alias = (0, _stringify2.default)(t.removePropertiesDeep(t.cloneDeep(key)));\n  }\n\n  if (node.computed) {\n    alias = \"[\" + alias + \"]\";\n  }\n\n  if (node.static) {\n    alias = \"static:\" + alias;\n  }\n\n  return alias;\n}\n\ntoKeyAlias.uid = 0;\n\ntoKeyAlias.increment = function () {\n  if (toKeyAlias.uid >= _maxSafeInteger2.default) {\n    return toKeyAlias.uid = 0;\n  } else {\n    return toKeyAlias.uid++;\n  }\n};\n\nfunction toIdentifier(name) {\n  name = name + \"\";\n\n  name = name.replace(/[^a-zA-Z0-9$_]/g, \"-\");\n\n  name = name.replace(/^[-0-9]+/, \"\");\n\n  name = name.replace(/[-\\s]+(.)?/g, function (match, c) {\n    return c ? c.toUpperCase() : \"\";\n  });\n\n  if (!t.isValidIdentifier(name)) {\n    name = \"_\" + name;\n  }\n\n  return name || \"_\";\n}\n\nfunction toBindingIdentifierName(name) {\n  name = toIdentifier(name);\n  if (name === \"eval\" || name === \"arguments\") name = \"_\" + name;\n  return name;\n}\n\nfunction toStatement(node, ignore) {\n  if (t.isStatement(node)) {\n    return node;\n  }\n\n  var mustHaveId = false;\n  var newType = void 0;\n\n  if (t.isClass(node)) {\n    mustHaveId = true;\n    newType = \"ClassDeclaration\";\n  } else if (t.isFunction(node)) {\n    mustHaveId = true;\n    newType = \"FunctionDeclaration\";\n  } else if (t.isAssignmentExpression(node)) {\n    return t.expressionStatement(node);\n  }\n\n  if (mustHaveId && !node.id) {\n    newType = false;\n  }\n\n  if (!newType) {\n    if (ignore) {\n      return false;\n    } else {\n      throw new Error(\"cannot turn \" + node.type + \" to a statement\");\n    }\n  }\n\n  node.type = newType;\n\n  return node;\n}\n\nfunction toExpression(node) {\n  if (t.isExpressionStatement(node)) {\n    node = node.expression;\n  }\n\n  if (t.isExpression(node)) {\n    return node;\n  }\n\n  if (t.isClass(node)) {\n    node.type = \"ClassExpression\";\n  } else if (t.isFunction(node)) {\n    node.type = \"FunctionExpression\";\n  }\n\n  if (!t.isExpression(node)) {\n    throw new Error(\"cannot turn \" + node.type + \" to an expression\");\n  }\n\n  return node;\n}\n\nfunction toBlock(node, parent) {\n  if (t.isBlockStatement(node)) {\n    return node;\n  }\n\n  if (t.isEmptyStatement(node)) {\n    node = [];\n  }\n\n  if (!Array.isArray(node)) {\n    if (!t.isStatement(node)) {\n      if (t.isFunction(parent)) {\n        node = t.returnStatement(node);\n      } else {\n        node = t.expressionStatement(node);\n      }\n    }\n\n    node = [node];\n  }\n\n  return t.blockStatement(node);\n}\n\nfunction valueToNode(value) {\n  if (value === undefined) {\n    return t.identifier(\"undefined\");\n  }\n\n  if (value === true || value === false) {\n    return t.booleanLiteral(value);\n  }\n\n  if (value === null) {\n    return t.nullLiteral();\n  }\n\n  if (typeof value === \"string\") {\n    return t.stringLiteral(value);\n  }\n\n  if (typeof value === \"number\") {\n    return t.numericLiteral(value);\n  }\n\n  if ((0, _isRegExp2.default)(value)) {\n    var pattern = value.source;\n    var flags = value.toString().match(/\\/([a-z]+|)$/)[1];\n    return t.regExpLiteral(pattern, flags);\n  }\n\n  if (Array.isArray(value)) {\n    return t.arrayExpression(value.map(t.valueToNode));\n  }\n\n  if ((0, _isPlainObject2.default)(value)) {\n    var props = [];\n    for (var key in value) {\n      var nodeKey = void 0;\n      if (t.isValidIdentifier(key)) {\n        nodeKey = t.identifier(key);\n      } else {\n        nodeKey = t.stringLiteral(key);\n      }\n      props.push(t.objectProperty(nodeKey, t.valueToNode(value[key])));\n    }\n    return t.objectExpression(props);\n  }\n\n  throw new Error(\"don't know how to turn this value into a node\");\n}"},"lineCount":350}},"error":null,"hash":"a16ca595d5c40b7d85e9b3c931375018","cacheData":{"env":{}}}
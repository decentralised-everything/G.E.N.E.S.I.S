{"id":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","dependencies":[{"name":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/package.json","includedInParent":true,"mtime":1616006581122},{"name":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/.babelrc","includedInParent":true,"mtime":1615911566978},{"name":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/node_modules/babel-traverse/package.json","includedInParent":true,"mtime":1615895468854},{"name":"babel-runtime/core-js/get-iterator","loc":{"line":5,"column":28},"parent":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/node_modules/babel-traverse/lib/path/inference/inferer-reference.js","resolved":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/node_modules/babel-runtime/core-js/get-iterator.js"},{"name":"babel-types","loc":{"line":28,"column":26},"parent":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/node_modules/babel-traverse/lib/path/inference/inferer-reference.js","resolved":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/node_modules/babel-types/lib/index.js"}],"generated":{"js":"\"use strict\";\n\nexports.__esModule = true;\n\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.default = function (node) {\n  if (!this.isReferenced()) return;\n\n  var binding = this.scope.getBinding(node.name);\n  if (binding) {\n    if (binding.identifier.typeAnnotation) {\n      return binding.identifier.typeAnnotation;\n    } else {\n      return getTypeAnnotationBindingConstantViolations(this, node.name);\n    }\n  }\n\n  if (node.name === \"undefined\") {\n    return t.voidTypeAnnotation();\n  } else if (node.name === \"NaN\" || node.name === \"Infinity\") {\n    return t.numberTypeAnnotation();\n  } else if (node.name === \"arguments\") {}\n};\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getTypeAnnotationBindingConstantViolations(path, name) {\n  var binding = path.scope.getBinding(name);\n\n  var types = [];\n  path.typeAnnotation = t.unionTypeAnnotation(types);\n\n  var functionConstantViolations = [];\n  var constantViolations = getConstantViolationsBefore(binding, path, functionConstantViolations);\n\n  var testType = getConditionalAnnotation(path, name);\n  if (testType) {\n    var testConstantViolations = getConstantViolationsBefore(binding, testType.ifStatement);\n\n    constantViolations = constantViolations.filter(function (path) {\n      return testConstantViolations.indexOf(path) < 0;\n    });\n\n    types.push(testType.typeAnnotation);\n  }\n\n  if (constantViolations.length) {\n    constantViolations = constantViolations.concat(functionConstantViolations);\n\n    for (var _iterator = constantViolations, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var violation = _ref;\n\n      types.push(violation.getTypeAnnotation());\n    }\n  }\n\n  if (types.length) {\n    return t.createUnionTypeAnnotation(types);\n  }\n}\n\nfunction getConstantViolationsBefore(binding, path, functions) {\n  var violations = binding.constantViolations.slice();\n  violations.unshift(binding.path);\n  return violations.filter(function (violation) {\n    violation = violation.resolve();\n    var status = violation._guessExecutionStatusRelativeTo(path);\n    if (functions && status === \"function\") functions.push(violation);\n    return status === \"before\";\n  });\n}\n\nfunction inferAnnotationFromBinaryExpression(name, path) {\n  var operator = path.node.operator;\n\n  var right = path.get(\"right\").resolve();\n  var left = path.get(\"left\").resolve();\n\n  var target = void 0;\n  if (left.isIdentifier({ name: name })) {\n    target = right;\n  } else if (right.isIdentifier({ name: name })) {\n    target = left;\n  }\n  if (target) {\n    if (operator === \"===\") {\n      return target.getTypeAnnotation();\n    } else if (t.BOOLEAN_NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n      return t.numberTypeAnnotation();\n    } else {\n      return;\n    }\n  } else {\n    if (operator !== \"===\") return;\n  }\n\n  var typeofPath = void 0;\n  var typePath = void 0;\n  if (left.isUnaryExpression({ operator: \"typeof\" })) {\n    typeofPath = left;\n    typePath = right;\n  } else if (right.isUnaryExpression({ operator: \"typeof\" })) {\n    typeofPath = right;\n    typePath = left;\n  }\n  if (!typePath && !typeofPath) return;\n\n  typePath = typePath.resolve();\n  if (!typePath.isLiteral()) return;\n\n  var typeValue = typePath.node.value;\n  if (typeof typeValue !== \"string\") return;\n\n  if (!typeofPath.get(\"argument\").isIdentifier({ name: name })) return;\n\n  return t.createTypeAnnotationBasedOnTypeof(typePath.node.value);\n}\n\nfunction getParentConditionalPath(path) {\n  var parentPath = void 0;\n  while (parentPath = path.parentPath) {\n    if (parentPath.isIfStatement() || parentPath.isConditionalExpression()) {\n      if (path.key === \"test\") {\n        return;\n      } else {\n        return parentPath;\n      }\n    } else {\n      path = parentPath;\n    }\n  }\n}\n\nfunction getConditionalAnnotation(path, name) {\n  var ifStatement = getParentConditionalPath(path);\n  if (!ifStatement) return;\n\n  var test = ifStatement.get(\"test\");\n  var paths = [test];\n  var types = [];\n\n  do {\n    var _path = paths.shift().resolve();\n\n    if (_path.isLogicalExpression()) {\n      paths.push(_path.get(\"left\"));\n      paths.push(_path.get(\"right\"));\n    }\n\n    if (_path.isBinaryExpression()) {\n      var type = inferAnnotationFromBinaryExpression(name, _path);\n      if (type) types.push(type);\n    }\n  } while (paths.length);\n\n  if (types.length) {\n    return {\n      typeAnnotation: t.createUnionTypeAnnotation(types),\n      ifStatement: ifStatement\n    };\n  } else {\n    return getConditionalAnnotation(ifStatement, name);\n  }\n}\nmodule.exports = exports[\"default\"];"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}}],"sources":{"../../node_modules/babel-traverse/lib/path/inference/inferer-reference.js":"\"use strict\";\n\nexports.__esModule = true;\n\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.default = function (node) {\n  if (!this.isReferenced()) return;\n\n  var binding = this.scope.getBinding(node.name);\n  if (binding) {\n    if (binding.identifier.typeAnnotation) {\n      return binding.identifier.typeAnnotation;\n    } else {\n      return getTypeAnnotationBindingConstantViolations(this, node.name);\n    }\n  }\n\n  if (node.name === \"undefined\") {\n    return t.voidTypeAnnotation();\n  } else if (node.name === \"NaN\" || node.name === \"Infinity\") {\n    return t.numberTypeAnnotation();\n  } else if (node.name === \"arguments\") {}\n};\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getTypeAnnotationBindingConstantViolations(path, name) {\n  var binding = path.scope.getBinding(name);\n\n  var types = [];\n  path.typeAnnotation = t.unionTypeAnnotation(types);\n\n  var functionConstantViolations = [];\n  var constantViolations = getConstantViolationsBefore(binding, path, functionConstantViolations);\n\n  var testType = getConditionalAnnotation(path, name);\n  if (testType) {\n    var testConstantViolations = getConstantViolationsBefore(binding, testType.ifStatement);\n\n    constantViolations = constantViolations.filter(function (path) {\n      return testConstantViolations.indexOf(path) < 0;\n    });\n\n    types.push(testType.typeAnnotation);\n  }\n\n  if (constantViolations.length) {\n    constantViolations = constantViolations.concat(functionConstantViolations);\n\n    for (var _iterator = constantViolations, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var violation = _ref;\n\n      types.push(violation.getTypeAnnotation());\n    }\n  }\n\n  if (types.length) {\n    return t.createUnionTypeAnnotation(types);\n  }\n}\n\nfunction getConstantViolationsBefore(binding, path, functions) {\n  var violations = binding.constantViolations.slice();\n  violations.unshift(binding.path);\n  return violations.filter(function (violation) {\n    violation = violation.resolve();\n    var status = violation._guessExecutionStatusRelativeTo(path);\n    if (functions && status === \"function\") functions.push(violation);\n    return status === \"before\";\n  });\n}\n\nfunction inferAnnotationFromBinaryExpression(name, path) {\n  var operator = path.node.operator;\n\n  var right = path.get(\"right\").resolve();\n  var left = path.get(\"left\").resolve();\n\n  var target = void 0;\n  if (left.isIdentifier({ name: name })) {\n    target = right;\n  } else if (right.isIdentifier({ name: name })) {\n    target = left;\n  }\n  if (target) {\n    if (operator === \"===\") {\n      return target.getTypeAnnotation();\n    } else if (t.BOOLEAN_NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n      return t.numberTypeAnnotation();\n    } else {\n      return;\n    }\n  } else {\n    if (operator !== \"===\") return;\n  }\n\n  var typeofPath = void 0;\n  var typePath = void 0;\n  if (left.isUnaryExpression({ operator: \"typeof\" })) {\n    typeofPath = left;\n    typePath = right;\n  } else if (right.isUnaryExpression({ operator: \"typeof\" })) {\n    typeofPath = right;\n    typePath = left;\n  }\n  if (!typePath && !typeofPath) return;\n\n  typePath = typePath.resolve();\n  if (!typePath.isLiteral()) return;\n\n  var typeValue = typePath.node.value;\n  if (typeof typeValue !== \"string\") return;\n\n  if (!typeofPath.get(\"argument\").isIdentifier({ name: name })) return;\n\n  return t.createTypeAnnotationBasedOnTypeof(typePath.node.value);\n}\n\nfunction getParentConditionalPath(path) {\n  var parentPath = void 0;\n  while (parentPath = path.parentPath) {\n    if (parentPath.isIfStatement() || parentPath.isConditionalExpression()) {\n      if (path.key === \"test\") {\n        return;\n      } else {\n        return parentPath;\n      }\n    } else {\n      path = parentPath;\n    }\n  }\n}\n\nfunction getConditionalAnnotation(path, name) {\n  var ifStatement = getParentConditionalPath(path);\n  if (!ifStatement) return;\n\n  var test = ifStatement.get(\"test\");\n  var paths = [test];\n  var types = [];\n\n  do {\n    var _path = paths.shift().resolve();\n\n    if (_path.isLogicalExpression()) {\n      paths.push(_path.get(\"left\"));\n      paths.push(_path.get(\"right\"));\n    }\n\n    if (_path.isBinaryExpression()) {\n      var type = inferAnnotationFromBinaryExpression(name, _path);\n      if (type) types.push(type);\n    }\n  } while (paths.length);\n\n  if (types.length) {\n    return {\n      typeAnnotation: t.createUnionTypeAnnotation(types),\n      ifStatement: ifStatement\n    };\n  } else {\n    return getConditionalAnnotation(ifStatement, name);\n  }\n}\nmodule.exports = exports[\"default\"];"},"lineCount":185}},"error":null,"hash":"d7ecb4a4551f00fc8ca0639a9a954b3f","cacheData":{"env":{}}}
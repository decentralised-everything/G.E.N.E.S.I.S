{"id":"../../node_modules/babel-types/lib/flow.js","dependencies":[{"name":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/package.json","includedInParent":true,"mtime":1616006581122},{"name":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/.babelrc","includedInParent":true,"mtime":1615911566978},{"name":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/node_modules/babel-types/package.json","includedInParent":true,"mtime":1615833783032},{"name":"./index","loc":{"line":8,"column":21},"parent":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/node_modules/babel-types/lib/flow.js","resolved":"/media/rishabh/OS/Users/Rishabh Barnwal/Desktop/JS/G.E.N.E.S.I.S/node_modules/babel-types/lib/index.js"}],"generated":{"js":"\"use strict\";\n\nexports.__esModule = true;\nexports.createUnionTypeAnnotation = createUnionTypeAnnotation;\nexports.removeTypeDuplicates = removeTypeDuplicates;\nexports.createTypeAnnotationBasedOnTypeof = createTypeAnnotationBasedOnTypeof;\n\nvar _index = require(\"./index\");\n\nvar t = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction createUnionTypeAnnotation(types) {\n  var flattened = removeTypeDuplicates(types);\n\n  if (flattened.length === 1) {\n    return flattened[0];\n  } else {\n    return t.unionTypeAnnotation(flattened);\n  }\n}\n\nfunction removeTypeDuplicates(nodes) {\n  var generics = {};\n  var bases = {};\n\n  var typeGroups = [];\n\n  var types = [];\n\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n    if (!node) continue;\n\n    if (types.indexOf(node) >= 0) {\n      continue;\n    }\n\n    if (t.isAnyTypeAnnotation(node)) {\n      return [node];\n    }\n\n    if (t.isFlowBaseAnnotation(node)) {\n      bases[node.type] = node;\n      continue;\n    }\n\n    if (t.isUnionTypeAnnotation(node)) {\n      if (typeGroups.indexOf(node.types) < 0) {\n        nodes = nodes.concat(node.types);\n        typeGroups.push(node.types);\n      }\n      continue;\n    }\n\n    if (t.isGenericTypeAnnotation(node)) {\n      var name = node.id.name;\n\n      if (generics[name]) {\n        var existing = generics[name];\n        if (existing.typeParameters) {\n          if (node.typeParameters) {\n            existing.typeParameters.params = removeTypeDuplicates(existing.typeParameters.params.concat(node.typeParameters.params));\n          }\n        } else {\n          existing = node.typeParameters;\n        }\n      } else {\n        generics[name] = node;\n      }\n\n      continue;\n    }\n\n    types.push(node);\n  }\n\n  for (var type in bases) {\n    types.push(bases[type]);\n  }\n\n  for (var _name in generics) {\n    types.push(generics[_name]);\n  }\n\n  return types;\n}\n\nfunction createTypeAnnotationBasedOnTypeof(type) {\n  if (type === \"string\") {\n    return t.stringTypeAnnotation();\n  } else if (type === \"number\") {\n    return t.numberTypeAnnotation();\n  } else if (type === \"undefined\") {\n    return t.voidTypeAnnotation();\n  } else if (type === \"boolean\") {\n    return t.booleanTypeAnnotation();\n  } else if (type === \"function\") {\n    return t.genericTypeAnnotation(t.identifier(\"Function\"));\n  } else if (type === \"object\") {\n    return t.genericTypeAnnotation(t.identifier(\"Object\"));\n  } else if (type === \"symbol\") {\n    return t.genericTypeAnnotation(t.identifier(\"Symbol\"));\n  } else {\n    throw new Error(\"Invalid typeof value\");\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/babel-types/lib/flow.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}}],"sources":{"../../node_modules/babel-types/lib/flow.js":"\"use strict\";\n\nexports.__esModule = true;\nexports.createUnionTypeAnnotation = createUnionTypeAnnotation;\nexports.removeTypeDuplicates = removeTypeDuplicates;\nexports.createTypeAnnotationBasedOnTypeof = createTypeAnnotationBasedOnTypeof;\n\nvar _index = require(\"./index\");\n\nvar t = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction createUnionTypeAnnotation(types) {\n  var flattened = removeTypeDuplicates(types);\n\n  if (flattened.length === 1) {\n    return flattened[0];\n  } else {\n    return t.unionTypeAnnotation(flattened);\n  }\n}\n\nfunction removeTypeDuplicates(nodes) {\n  var generics = {};\n  var bases = {};\n\n  var typeGroups = [];\n\n  var types = [];\n\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n    if (!node) continue;\n\n    if (types.indexOf(node) >= 0) {\n      continue;\n    }\n\n    if (t.isAnyTypeAnnotation(node)) {\n      return [node];\n    }\n\n    if (t.isFlowBaseAnnotation(node)) {\n      bases[node.type] = node;\n      continue;\n    }\n\n    if (t.isUnionTypeAnnotation(node)) {\n      if (typeGroups.indexOf(node.types) < 0) {\n        nodes = nodes.concat(node.types);\n        typeGroups.push(node.types);\n      }\n      continue;\n    }\n\n    if (t.isGenericTypeAnnotation(node)) {\n      var name = node.id.name;\n\n      if (generics[name]) {\n        var existing = generics[name];\n        if (existing.typeParameters) {\n          if (node.typeParameters) {\n            existing.typeParameters.params = removeTypeDuplicates(existing.typeParameters.params.concat(node.typeParameters.params));\n          }\n        } else {\n          existing = node.typeParameters;\n        }\n      } else {\n        generics[name] = node;\n      }\n\n      continue;\n    }\n\n    types.push(node);\n  }\n\n  for (var type in bases) {\n    types.push(bases[type]);\n  }\n\n  for (var _name in generics) {\n    types.push(generics[_name]);\n  }\n\n  return types;\n}\n\nfunction createTypeAnnotationBasedOnTypeof(type) {\n  if (type === \"string\") {\n    return t.stringTypeAnnotation();\n  } else if (type === \"number\") {\n    return t.numberTypeAnnotation();\n  } else if (type === \"undefined\") {\n    return t.voidTypeAnnotation();\n  } else if (type === \"boolean\") {\n    return t.booleanTypeAnnotation();\n  } else if (type === \"function\") {\n    return t.genericTypeAnnotation(t.identifier(\"Function\"));\n  } else if (type === \"object\") {\n    return t.genericTypeAnnotation(t.identifier(\"Object\"));\n  } else if (type === \"symbol\") {\n    return t.genericTypeAnnotation(t.identifier(\"Symbol\"));\n  } else {\n    throw new Error(\"Invalid typeof value\");\n  }\n}"},"lineCount":108}},"error":null,"hash":"c2ffc4460de6d15578b0206877959db6","cacheData":{"env":{}}}